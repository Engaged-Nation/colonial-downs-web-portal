<div id="instant-reward-form">

    {% if not voucher or (voucher and points) or (voucher and drawingEntries) or (voucher and experience) %}
        <h1 id="instant-reward-form-header" class="modal-header-style-black">{{ 'fzone.instantRewards.header'|trans({}, 'frontend')|raw }}</h1>
        <h2 id="instant-reward-form-subheader" class="modal-body-style">{{ 'fzone.instantRewards.subheader'|trans({}, 'frontend')|raw }}</h2>
    {% endif %}

    {% if points %}
        <p class="modal-body-reward">{{ 'fzone.instantRewards.prize.points'|trans({'%points%': points, '%aliasPoints%': aliasPoints}, 'frontend')|raw }}</p>
    {% endif %}

    {% if drawingEntries %}
        <p id="instant-reward-drawing-entries" class="modal-body-reward">{{ 'fzone.instantRewards.prize.drawingEntries'|trans({'%entries%': drawingEntries}, 'frontend')|raw }}</p>
    {% endif %}

    {% if experience %}
        <p id="instant-reward-experience" class="modal-body-reward">{{ 'fzone.instantRewards.prize.experience'|trans({'%experience%': experience, '%aliasExperience%': aliasExperience}, 'frontend')|raw }}</p>

        <script>
            EngagedNation.RequireJS.require(
                ["jquery_1_10"],
                function($)
                {
                    $(document).trigger(
                        $.Event(
                            'EngagedNation:Experience-Earned',
                            {
                                engagedNation: {
                                    exp: {{ experience|e('js') }}
                                }
                            }
                        )
                    );
                }
            );
        </script>
    {% endif %}

    {% if voucher %}
        <div id="instantRewardsUserInputForm" style="text-align: center;">
            {{
            renderTemplateString(
            voucher.summary,
            {
                "printButton":printButton,
                "smsButton":smsButton,
                "emailButton":emailButton,
                "kioskButton":kioskButton,
                "voucher":voucher,
                "userVoucher":userVoucher,
                "s3Url":s3Url
            }
            )
            }}
        </div>

            <script>
                EngagedNation.RequireJS.require(
                    [
                        'jquery_1_10',
                        'apiClientFrontendUserEmail'
                    ],
                    function($, ApiClientFrontendUserEmail)
                    {
                        /**
                         * Email voucher to User if qualified.
                         */
                        (new ApiClientFrontendUserEmail).post(
                            {
                                userId: EngagedNation.Config.userId,
                                usersVouchersId: '{{ publicUserVoucherId|e('js') }}'
                            },
                            function(response) {
                                if (!response.data) {
                                    $(document).trigger('EngagedNation:Voucher-Awarded');
                                    return;
                                }

                                if (response.status === 'Success') {
                                    EngagedNation.Notification.displaySuccess(
                                        {
                                            title: response.data.title,
                                            message: response.data.message,
                                            position: 'topRight',
                                            timeout: 0
                                        }
                                    );
                                    return;
                                }

                                EngagedNation.Notification.displayError(
                                    {
                                        title: response.data.title,
                                        message: response.data.message,
                                        position: 'topRight',
                                        timeout: 0
                                    }
                                );
                            },
                            null
                        );
                    }
                );
            </script>
    {% else %}
        <script>
            EngagedNation.RequireJS.require(
                ["jquery_1_10"],
                function($)
                {
                    setTimeout(
                        function() {
                            if ($('#instant-reward-form').length > 0) {
                                $('.lbxgrid .xclose span').click();
                            }
                        },
                        3500
                    );
                }
            );
        </script>
    {% endif %}
</div>

<script>
    var EngagedNation = EngagedNation || {};
    EngagedNation.Callback = EngagedNation.Callback || {};

    EngagedNation.RequireJS.require(
        ["jquery_1_10"],
        function($)
        {
            $(
                function() {
                    EngagedNation.Callback.InstantRewardUserForm = function(event, target) {
                        event.preventDefault();

                        var self = $(target),
                            data = {};

                        {% if isManualInputEnabled %}
                        if (self.find('input[name="email"]').length > 0) {
                            data = {
                                action: self.find('input[name="action"]').val(),
                                pendingMessage: self.find('input[name="pendingMessage"]').val(),
                                userFormInputs: self.serialize()
                            }
                        }

                        if (self.find('input[name="phoneNumber"]').length > 0) {
                            data = {
                                action: self.find('input[name="action"]').val(),
                                pendingMessage: self.find('input[name="pendingMessage"]').val(),
                                userFormInputs: self.serialize()
                            }
                        }

                        data = {
                            action: self.find('input[name="action"]').val(),
                            pendingMessage: self.find('input[name="pendingMessage"]').val(),
                            userFormInputs: self.serialize()
                        };
                        {% else %}
                        data = {
                            action: self.find('input[name="action"]').val(),
                            pendingMessage: self.find('input[name="pendingMessage"]').val(),
                            publicUserVoucherId: self.find('input[name="publicUserVoucherId"]').val(),
                            userFormInputs: self.serialize()
                        };
                        {% endif %}

                        data['componentName'] = '{{ componentName|e('js') }}';
                        data['publicUserVoucherId'] = '{{ publicUserVoucherId|e('js') }}';

                        EngagedNation.InstantReward.sendReward(data);
                    };

                    if (!EngagedNation.Callback.hasOwnProperty('InstantRewardUserPrint')) {
                        EngagedNation.Callback.InstantRewardUserPrint = function() {

                            EngagedNation.InstantReward.printReward($(this));
                        }
                    }

                    var onUserPrint = '#instantRewardsUserInputForm .btn-print-reward';
                    $(document).off('click', onUserPrint, EngagedNation.Callback.InstantRewardUserPrint);
                    $(document).on('click', onUserPrint, EngagedNation.Callback.InstantRewardUserPrint);

                    var viewMyVouchersBtn = '#instant-reward-my-vouchers-btn';
                    $(document).one('click', viewMyVouchersBtn, EngagedNation.Utility.showUserVoucher);
                }
            );
        }
    );
</script>
